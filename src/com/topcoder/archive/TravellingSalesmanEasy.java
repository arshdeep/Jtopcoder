package com.topcoder.archive;

import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class TravellingSalesmanEasy {
	public int getMaxProfit(int M, int[] profit, int[] city, int[] visit)
	{
		int maxProfit = 0;
		boolean[] visited = new boolean[city.length];
		
		for (int cty : visit) {
			int tprofit = 0;
			int profitIdx = -1;
			
			for (int i = 0; i < profit.length; ++i) {
				if (city[i] == cty && !visited[i]) {
					if (tprofit < profit[i]) {
						tprofit = profit[i];
						profitIdx = i;
					}
				}
			}
			
			if (profitIdx != -1) {
				maxProfit += tprofit;
				visited[profitIdx] = true;
			}
		}
		return maxProfit;
	}
	
	@Test
	public void test() {
	    assertTrue(getMaxProfit(2, new int[]{3,10}, new int[]{1,1}, new int[]{2,1}) == 10 );
	    assertTrue(getMaxProfit(6, new int[]{77,33,10,68,71,50,89}, new int[]{4,1,5,6,2,2,1}, new int[]{6,5,5,6,4}) == 155 );
	    assertTrue(getMaxProfit(63, new int[]{42, 12, 40, 3, 3, 50, 79, 11, 58, 77, 28, 36, 76, 72, 72, 75, 71, 78, 56, 85, 53, 57, 72, 8, 96, 96, 74, 17, 61, 83, 59, 89, 90, 58, 28, 35, 58, 47, 88, 19, 2, 69, 5, 2, 52, 19, 48, 80, 99, 46, 26, 86, 96, 10, 33, 49, 44, 68, 37, 47, 38, 6, 98, 88, 59, 74, 88, 4, 81, 1, 5, 80, 20, 74, 89, 54, 5, 10, 51, 88, 52, 66, 77, 43, 35, 66, 37, 34, 22, 67, 50, 97, 70, 17, 40, 47, 59, 96, 48, 67, 96, 87, 71, 21, 40, 69, 78, 51, 66, 60, 52, 75, 14, 9, 12, 89, 1, 2, 28, 15, 71, 59, 18, 54, 45, 39, 9, 35, 67, 56, 2, 74, 6, 42, 8, 7, 60, 26, 52, 65, 25, 96, 7}
	    , new int[]{32, 16, 49, 20, 38, 55, 32, 54, 53, 28, 8, 39, 37, 33, 51, 46, 48, 3, 4, 47, 25, 44, 6, 22, 57, 21, 53, 25, 7, 10, 40, 49, 37, 39, 18, 6, 44, 28, 36, 33, 14, 60, 56, 61, 21, 46, 32, 47, 41, 22, 34, 7, 21, 6, 5, 5, 53, 46, 31, 14, 56, 16, 29, 51, 1, 36, 25, 60, 15, 62, 41, 60, 60, 2, 29, 29, 35, 5, 63, 61, 1, 58, 22, 63, 63, 24, 20, 63, 34, 52, 12, 30, 44, 19, 15, 40, 63, 22, 48, 27, 28, 56, 12, 53, 33, 11, 51, 44, 21, 16, 52, 33, 44, 21, 1, 62, 1, 8, 39, 51, 29, 14, 19, 50, 54, 36, 30, 2, 42, 49, 6, 37, 17, 21, 4, 61, 45, 13, 55, 18, 19, 20, 27},
	    new int[]{10, 8, 28, 6, 58, 9, 15, 25, 19, 50, 20, 43, 37, 43, 23, 17, 8, 7, 20, 56, 17, 18, 1, 30, 5, 22, 28, 39, 59, 46, 22, 17, 43, 50, 18, 42, 2, 33, 29, 21, 45, 51, 51, 30, 33, 46, 8, 45, 45, 10, 16, 6, 38, 33, 40, 29, 56, 18, 15, 1, 14, 33, 37, 21, 51, 4, 42, 32, 45, 58, 40, 29, 20, 18, 47, 35, 30, 34, 29, 28, 34, 46, 18, 40, 26, 14, 21, 50, 9, 45, 18, 3, 31, 50, 15, 55, 61, 29, 4, 18, 45, 6, 21, 56, 56, 31, 55, 50, 23, 28, 21, 21, 21, 11, 35, 5, 19, 28, 45, 7, 60, 61, 34, 4, 39, 30, 25, 7, 22, 60, 34, 11, 62, 46, 54, 9, 49, 53, 36, 18, 36, 59, 62, 17, 23, 24, 8, 59, 14, 13, 11, 11, 12, 1, 45, 9, 19, 15, 19, 62, 11, 4, 5, 48, 30, 26, 56, 37, 47, 56, 44, 19, 21, 61, 16, 38, 51, 51, 38, 42, 32, 33, 42, 25, 12, 39, 29}) == 5862 );
	}	
}
