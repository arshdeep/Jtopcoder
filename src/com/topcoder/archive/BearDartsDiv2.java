package com.topcoder.archive;

import static org.junit.Assert.assertTrue;

import java.util.Arrays;

import org.junit.Test;

/*http://community.topcoder.com/stat?c=problem_statement&pm=13479*/
public class BearDartsDiv2 {
	public 	long count(int[] w) {
		long ans = 0;
		int[] dp = new int[1000010];
		Arrays.fill(dp, 0);
		
		for ( int i = 0, size = w.length; i < size; ++i ) {
			ans += dp[w[i]];
			for ( int j = 0; j < i; ++j ) {
				for ( int k = 0; k < j; ++k ) {
					if ( (long)((long)w[i] * (long)w[j] * (long)w[k]) < 1000010L) {
						dp[(w[i] * w[j] * w[k])] += 1;
					}
				}
			}
		}

		return ans;
	}
	
	@Test
	public void test() {
		assertTrue( count( new int[]{10,2,2,7,40,160}) == 2 );
		assertTrue( count( new int[]{128,64,32,16,8,4,2,1}) == 0 );
		assertTrue( count( new int[]{2,3,4,5,6,8,12,16,20,24,40,24,20,16,12,8,6,5,4,3,2} ) == 3 );
		assertTrue( count( new int[]{100,100,100,1000000,1000000,1000000,1000000,1000000} ) == 5 );
		assertTrue( count( new int[]{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}) == 2573031125L );
		assertTrue( count( new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42} ) == 126490 );
		assertTrue( count( new int[]{2, 2, 2, 1000000, 1, 5, 1, 1, 1, 1, 10, 500000, 1, 50000, 1, 2, 1, 5000, 500, 2, 1, 10000, 500000, 500000, 5000, 2, 100000, 1000, 1, 1, 1, 100, 1, 1, 2, 1, 1, 1, 1, 100000, 1000, 1, 500, 1, 1000, 1, 1, 1, 10000, 2, 1, 1, 10000, 100, 1000000, 500, 1, 50000, 5000, 100000, 1, 2, 50000, 100000, 1, 1, 5, 1000, 2, 500, 1, 100, 1, 5000, 1, 2, 10, 2, 50000, 100, 1, 1, 1, 1, 1000, 10, 1000000, 2, 1000, 500000, 2, 100000, 100000, 1, 500000, 1, 1000000, 1, 1, 500000} ) == 204380 );
		assertTrue( count( new int[]{} ) == 295577740L );
		assertTrue( count( new int[]{100000, 100000, 862, 636928} ) == 0 );
		assertTrue( count( new int[]{} ) == 1055620300L );
	}
}
